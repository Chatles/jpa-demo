package hello;

import com.sun.deploy.util.ArrayUtil;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import hello.User;
import hello.UserRepository;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
@RestController
public class MainController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;

	@Autowired
    private OrderRepository orderRepository;
	
	@GetMapping(path="/add") // Map ONLY GET Requests
	public @ResponseBody String addNewUser () {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request
		
		User n = new User();
		n.setName("zs");
		n.setEmail("zs@ss.ss");

		Order o1 = new Order("first");
		o1.setUser(n);
		Order o2 = new Order("second");
		o2.setUser(n);
		List<Order> orderList = Arrays.asList(o1, o2);

		n.setOrderList(orderList);
		userRepository.save(n);

		return "Saved";
	}

	@GetMapping(path = "/patch")
    public User update() {
        User n = new User();
        n.setName("zs");
        n.setEmail("zs@ss.ss");
        n.setId(17);

//        orderRepository.


        User user = userRepository.findById(n.getId()).get();
        List<Order> orderList = user.getOrderList();
        for(Order o : orderList) {
            o.setName("new");
            o.setUser(null);
        }
        orderRepository.saveAll(orderList);

        orderList = Arrays.asList(new Order("new2"));
        for(Order o:orderList){
            o.setUser(user);
        }
        orderRepository.saveAll(orderList);

        user.setName("patch success22");
//        user.setOrderList(new ArrayList<>());

//        Order o2 = new Order("forth");
//        o2.setUser(n);
//
//        n.setOrderList(Arrays.asList(o2));

        user = userRepository.save(user);
        return user;
    }
	
	@GetMapping(path="/users")
	public @ResponseBody Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		return userRepository.findAll();
	}
    @GetMapping(path="/orders")
    public @ResponseBody Iterable<Order> getAllOrders() {
        // This returns a JSON or XML with the users
        return orderRepository.findAll();
    }

}
